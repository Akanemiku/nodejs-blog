/*
Navicat MySQL Data Transfer

Source Server         : 2
Source Server Version : 50617
Source Host           : localhost:3306
Source Database       : newblog

Target Server Type    : MYSQL
Target Server Version : 50617
File Encoding         : 65001

Date: 2019-08-28 20:03:27
*/

SET FOREIGN_KEY_CHECKS=0;

-- ----------------------------
-- Table structure for admin
-- ----------------------------
DROP TABLE IF EXISTS `admin`;
CREATE TABLE `admin` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `username` varchar(12) NOT NULL,
  `password` varchar(40) NOT NULL,
  `status` tinyint(4) unsigned zerofill NOT NULL,
  `time` int(11) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=22 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of admin
-- ----------------------------
INSERT INTO `admin` VALUES ('6', 'admin222', 'c4cefc53ca414d25294fd23b8fccd356', '0000', '1565537772');
INSERT INTO `admin` VALUES ('9', 'zhouhonyang', '1f58a26bcaf6084792d0bddf7f63e3a5', '0000', '1565595251');
INSERT INTO `admin` VALUES ('10', '234124213', '9dcbf642c78137f656ba7c24381ac25b', '0000', '1565597299');
INSERT INTO `admin` VALUES ('12', 'fdafdasfsdfa', 'adbc91a43e988a3b5b745b8529a90b61', '0000', '1565597316');
INSERT INTO `admin` VALUES ('13', '21312312', '593c9b4a9390551d53e5cacf28ebd638', '0000', '1565597360');
INSERT INTO `admin` VALUES ('14', '23214321', 'adbc91a43e988a3b5b745b8529a90b61', '0001', '1565597372');
INSERT INTO `admin` VALUES ('15', '11111111111', '9dcbf642c78137f656ba7c24381ac25b', '0001', '1565597381');
INSERT INTO `admin` VALUES ('19', 'admin123', 'e178b92b2289980c649103924b4f1cf7', '0000', '1565946880');
INSERT INTO `admin` VALUES ('20', 'message', '1bbd886460827015e5d605ed44252251', '0000', '1566369840');

-- ----------------------------
-- Table structure for banner
-- ----------------------------
DROP TABLE IF EXISTS `banner`;
CREATE TABLE `banner` (
  `id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(255) NOT NULL,
  `url` varchar(255) NOT NULL,
  `sort` tinyint(4) NOT NULL,
  `img` varchar(255) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=10 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of banner
-- ----------------------------
INSERT INTO `banner` VALUES ('4', 'js加载时间线', 'https://diyiedu.com', '2', '/upload/slider/15658649465529105.png');
INSERT INTO `banner` VALUES ('5', '浏览器的渲染过程', 'https://diyiedu.com', '3', '/upload/slider/15658651143502368.png');
INSERT INTO `banner` VALUES ('6', 'render树的生成', 'https://duyiedu.com', '6', '/upload/slider/15658651607047453.png');
INSERT INTO `banner` VALUES ('7', '美景2', 'http://baidu.com', '5', '/upload/slider/15658873219895596.jpg');
INSERT INTO `banner` VALUES ('9', 'CookieVsSession', 'http://baidu.com', '101', '/upload/slider/15665252358059753.jpg');

-- ----------------------------
-- Table structure for coloum
-- ----------------------------
DROP TABLE IF EXISTS `coloum`;
CREATE TABLE `coloum` (
  `id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(30) NOT NULL,
  `url` varchar(50) NOT NULL,
  `sort` tinyint(4) NOT NULL,
  `keywords` varchar(100) NOT NULL,
  `description` varchar(100) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of coloum
-- ----------------------------

-- ----------------------------
-- Table structure for comment
-- ----------------------------
DROP TABLE IF EXISTS `comment`;
CREATE TABLE `comment` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `user_id` int(11) NOT NULL,
  `news_id` int(11) NOT NULL,
  `text` varchar(255) NOT NULL,
  `time` int(11) NOT NULL,
  `status` tinyint(4) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=41 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of comment
-- ----------------------------
INSERT INTO `comment` VALUES ('1', '1', '1', '横扫地还哦说的发ios平湖撒饭还是大姐夫 发挥得克萨结婚的肤色地方史蒂芬施工方沙发公交卡是的寡妇卡萨帝官方速度快国防科技', '415421546', '0');
INSERT INTO `comment` VALUES ('2', '2', '1', '撒大大的 的啊大大的啊撒吊', '1215454455', '1');
INSERT INTO `comment` VALUES ('3', '3', '1', '这是第三篇文章', '1324546551', '2');
INSERT INTO `comment` VALUES ('4', '4', '2', '这是低温片博客 文章', '2135456123', '1');
INSERT INTO `comment` VALUES ('5', '6', '2', '颠倒撒丁岛撒开那么大三', '1345612315', '1');
INSERT INTO `comment` VALUES ('6', '6', '3', '你点打破那你的撒里看见的', '13224543', '2');
INSERT INTO `comment` VALUES ('7', '132', '16', '这艘度欺骗为家的哈 ', '1132454545', '0');
INSERT INTO `comment` VALUES ('15', '131', '10', '325324523', '1566871261', '0');
INSERT INTO `comment` VALUES ('16', '131', '11', 'adsadsa', '1566871277', '0');
INSERT INTO `comment` VALUES ('17', '131', '11', 'adsadsa', '1566871373', '0');
INSERT INTO `comment` VALUES ('18', '131', '10', 'asdasdsa', '1566871390', '0');
INSERT INTO `comment` VALUES ('24', '131', '10', '沙发', '1566872269', '0');
INSERT INTO `comment` VALUES ('32', '131', '8', 'dasdas', '1566881832', '0');
INSERT INTO `comment` VALUES ('33', '131', '8', '1323123123', '1566881855', '0');
INSERT INTO `comment` VALUES ('34', '131', '8', 'qweqwe', '1566881866', '0');
INSERT INTO `comment` VALUES ('35', '131', '8', '<img src=\"/public/home/images/arclist/13.gif\" border=\"0\" /><img src=\"/public/home/images/arclist/13.gif\" border=\"0\" /><img src=\"/public/home/images/arclist/13.gif\" border=\"0\" />', '1566881986', '0');
INSERT INTO `comment` VALUES ('36', '131', '14', '你咋知道哦<img src=\"/public/home/images/arclist/13.gif\" border=\"0\" />', '1566882699', '0');
INSERT INTO `comment` VALUES ('37', '131', '16', '<img src=\"/public/home/images/arclist/4.gif\" border=\"0\" /><img src=\"/public/home/images/arclist/5.gif\" border=\"0\" /><img src=\"/public/home/images/arclist/4.gif\" border=\"0\" />', '1566883027', '0');
INSERT INTO `comment` VALUES ('38', '131', '16', 'qwrqwrqwrw', '1566890928', '0');
INSERT INTO `comment` VALUES ('39', '131', '12', '34214243', '1566896902', '1');
INSERT INTO `comment` VALUES ('40', '131', '10', '2131423', '1566900970', '0');

-- ----------------------------
-- Table structure for news
-- ----------------------------
DROP TABLE IF EXISTS `news`;
CREATE TABLE `news` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `cid` int(11) NOT NULL,
  `title` varchar(255) NOT NULL,
  `img` varchar(255) NOT NULL,
  `time` int(11) NOT NULL,
  `num` int(11) NOT NULL,
  `info` varchar(255) NOT NULL,
  `author` varchar(255) NOT NULL,
  `text` text NOT NULL,
  `keywords` varchar(255) NOT NULL,
  `description` varchar(255) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=17 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of news
-- ----------------------------
INSERT INTO `news` VALUES ('1', '1', '前端开发', '/upload/news/15660101818704110.jpg', '1566010182', '100', '前端开发', '黄绍模', '<p>weqwqerwqerwrewqrqwrewqe</p>v<p>weqwqerwqerwrewqrqwrewqe</p>v', '前端开发有HTML，CSS，Javascript...', '前端开发就是好');
INSERT INTO `news` VALUES ('2', '1', '前端技术博客之Javascript', '/upload/news/15660116342019928.jpg', '1566011634', '50', 'javascript的简介', '黄绍模', '<p>weqwqerwqerwrewqrqwrewqe</p>', 'javascritp', 'javascript的描述');
INSERT INTO `news` VALUES ('3', '1', 'HTMl5之canvas绘图', '/upload/news/1566011740089621.png', '1566011740', '50', '这个一篇canvas文章', '黄绍模', '<p>weqwqerwqerwrewqrqwrewqe</p>', 'canvas，绘图', '这个一篇canvas文章描述');
INSERT INTO `news` VALUES ('4', '1', 'CSS3之3D动画详解', '/upload/news/15660118676501995.jpg', '1566011868', '1', '这是一篇css3D动画的文章', '黄绍模', 'v<p>weqwqerwqerwrewqrqwrewqe</p>', 'css3D动画', '这是一篇css3D动画的文章描述');
INSERT INTO `news` VALUES ('5', '1', 'css之flex布局', '/upload/news/15660119368572602.png', '1566011937', '24', '这是一篇关于css之flex布局的文章', '黄绍模', 'v<p>weqwqerwqerwrewqrqwrewqe</p>', 'flex布局', '这是一篇关于css之flex布局的文章描述');
INSERT INTO `news` VALUES ('6', '6', '后端开发之java精通', '/upload/news/15660165907412860.png', '1566016591', '420', '后端开发之java精通', '黄绍模', 'v<p>weqwqerwqerwrewqrqwrewqe</p>', '后端开发之java精通', '后端开发之java精通');
INSERT INTO `news` VALUES ('7', '6', '后端开发之C入门篇', '/upload/news/15660168810037016.png', '1566016881', '40', '后端开发之C入门篇', '黄绍模', '<p>weqwqerwqerwrewqrqwrewqe</p>', '后端开发之C入门篇', '后端开发之C入门篇');
INSERT INTO `news` VALUES ('8', '1', '前端开发', '/upload/news/15660170683431998.png', '1566017068', '78', '前端开发', '黄绍模', '<p>weqwqerwqerwrewqrqwrewqe</p>', '前端开发有HTML，CSS，Javascript...', '前端开发');
INSERT INTO `news` VALUES ('10', '2', '前端开发2', '/upload/news/15663878481528730.gif', '1566387848', '78', 'javascript的简介', '黄绍模', '<p>weqwqerwqerwrewqrqwrewqe</p>', '前端开发有HTML，CSS，Javascript...', '123123');
INSERT INTO `news` VALUES ('11', '8', '内网渗透测试', '/upload/news/15663927231448181.gif', '1566392723', '0', '这是一篇关于内网渗透测试的文章，这里面讲了....', '黄绍模', '<blockquote><p><img src=\"/images/ueditor/1164174421179633664.png\"/></p><p><img src=\"/images/ueditor/1164174421469040640.jpg\"/></p><p><img src=\"/images/ueditor/1164174421863305216.jpg\"/></p><p>阿叔哈斯达舒克利华大使阿萨拉开始的哈里开始的，加上的吧说的看见啊个大叔大叔的弄啊实打实的<br/></p></blockquote>', '渗透，漏洞攻击', '这是一篇关于内网渗透测试的文章');
INSERT INTO `news` VALUES ('12', '1', 'Cookie和Session的工作原理及比较', '/upload/news/15665247778932046.jpg', '1566524778', '0', '因为HTTP协议是无状态的，即服务器不知道用户上一次做了什么，这严重阻碍了交互式Web应用程序的实现。在典型的网上购物场景中，用户浏览了几个页面，买了一盒饼干和两饮料...', '黄绍模', '<h1 class=\"postTitle\" style=\"margin: 0px 0px 20px; padding: 0px; font-size: 28px; font-weight: 400; line-height: 1.8; color: rgb(51, 51, 51); font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\"><a class=\"postTitle2\" href=\"https://www.cnblogs.com/nieliangcai/p/8864791.html\" style=\"margin: 0px; padding: 0px; color: rgb(51, 51, 51); text-decoration-line: none;\">Cookie和Session的工作原理及比较</a></h1><p style=\"margin: 10px auto; padding: 0px;\">一、Cookie详解</p><p style=\"margin: 10px auto; padding: 0px;\">（1）简介</p><p><br/></p><blockquote style=\"margin: 0px; padding: 5px 10px; background: none rgb(255, 255, 255); border-top: none; border-right: none; border-bottom: none; border-left: 5px solid rgb(221, 221, 221); border-image: initial; color: rgb(51, 51, 51); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; white-space: normal;\"><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; color: rgb(119, 119, 119);\">因为HTTP协议是<span style=\"margin: 0px; padding: 0px; text-decoration-line: underline;\">无状态</span>的，即服务器不知道用户上一次做了什么，这严重阻碍了交互式Web应用程序的实现。在典型的网上购物场景中，用户浏览了几个页面，买了一盒饼干和两饮料。最后结帐时，由于HTTP的无状态性，不通过额外的手段，服务器并不知道用户到底买了什么。为了做到这点，就需要使用到Cookie了。服务器可以设置或读取Cookies中包含信息，借此维护用户跟服务器会话中的状态。</p></blockquote><blockquote style=\"margin: 0px; padding: 5px 10px; background: none rgb(255, 255, 255); border-top: none; border-right: none; border-bottom: none; border-left: 5px solid rgb(221, 221, 221); border-image: initial; color: rgb(51, 51, 51); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; white-space: normal;\"><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; color: rgb(119, 119, 119);\">Cookie（复数形态：Cookies），是指某些网站为了辨别用户身份、进行session跟踪而储存在用户本地终端上的数据（通常经过加密）。</p><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; color: rgb(119, 119, 119);\">Cookie是由服务端生成的，发送给客户端（通常是浏览器）的。Cookie总是保存在客户端中，按在客户端中的存储位置，可分为内存Cookie和硬盘Cookie：</p><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; color: rgb(119, 119, 119);\"><img src=\"/images/ueditor/1165533147849428992.png\" title=\"\" alt=\"image.png\"/></p></blockquote><p><br/></p><p><span style=\"color: rgb(119, 119, 119); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; background-color: rgb(255, 255, 255);\">内存Cookie由浏览器维护，保存在内存中，浏览器关闭后就消失了，其存在时间是短暂的。</span></p><p><br/></p><p><br/></p><blockquote style=\"margin: 0px; padding: 5px 10px; background: none rgb(255, 255, 255); border-top: none; border-right: none; border-bottom: none; border-left: 5px solid rgb(221, 221, 221); border-image: initial; color: rgb(51, 51, 51); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; white-space: normal;\"><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; color: rgb(119, 119, 119);\">硬盘Cookie保存在硬盘里，有一个过期时间，除非用户手工清理或到了过期时间，硬盘Cookie不会被删除，其存在时间是长期的。所以，按存在时间，可分为非持久Cookie和持久Cookie。</p><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; color: rgb(119, 119, 119);\">&nbsp;</p></blockquote><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; color: rgb(119, 119, 119); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">&nbsp;</p><p style=\"margin: 10px auto; padding: 0px; color: rgb(51, 51, 51); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">（2）工作原理</p><blockquote style=\"margin: 0px; padding: 5px 10px; background: none rgb(255, 255, 255); border-top: none; border-right: none; border-bottom: none; border-left: 5px solid rgb(221, 221, 221); border-image: initial; color: rgb(51, 51, 51); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; white-space: normal;\"><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; color: rgb(119, 119, 119);\">1、创建Cookie</p></blockquote><blockquote style=\"margin: 0px; padding: 5px 10px; background: none rgb(255, 255, 255); border-top: none; border-right: none; border-bottom: none; border-left: 5px solid rgb(221, 221, 221); border-image: initial; color: rgb(51, 51, 51); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; white-space: normal;\"><blockquote style=\"margin: 0px; padding: 5px 10px; background: none; border-top: none; border-right: none; border-bottom: none; border-left: 5px solid rgb(221, 221, 221); border-image: initial;\"><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; color: rgb(119, 119, 119);\">当用户第一次浏览某个使用Cookie的网站时，该网站的服务器就进行如下工作：</p></blockquote></blockquote><blockquote style=\"margin: 0px; padding: 5px 10px; background: none rgb(255, 255, 255); border-top: none; border-right: none; border-bottom: none; border-left: 5px solid rgb(221, 221, 221); border-image: initial; color: rgb(51, 51, 51); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; white-space: normal;\"><blockquote style=\"margin: 0px; padding: 5px 10px; background: none; border-top: none; border-right: none; border-bottom: none; border-left: 5px solid rgb(221, 221, 221); border-image: initial;\"><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; color: rgb(119, 119, 119);\">①该用户生成一个唯一的识别码（Cookie id），创建一个Cookie对象；</p></blockquote></blockquote><blockquote style=\"margin: 0px; padding: 5px 10px; background: none rgb(255, 255, 255); border-top: none; border-right: none; border-bottom: none; border-left: 5px solid rgb(221, 221, 221); border-image: initial; color: rgb(51, 51, 51); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; white-space: normal;\"><blockquote style=\"margin: 0px; padding: 5px 10px; background: none; border-top: none; border-right: none; border-bottom: none; border-left: 5px solid rgb(221, 221, 221); border-image: initial;\"><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; color: rgb(119, 119, 119);\">②默认情况下它是一个会话级别的cookie，存储在浏览器的内存中，用户退出浏览器之后被删除。如果网站希望浏览器将该Cookie存储在磁盘上，则需要设置最大时效（maxAge），并给出一个以秒为单位的时间（将最大时效设为0则是命令浏览器删除该Cookie）；</p></blockquote></blockquote><blockquote style=\"margin: 0px; padding: 5px 10px; background: none rgb(255, 255, 255); border-top: none; border-right: none; border-bottom: none; border-left: 5px solid rgb(221, 221, 221); border-image: initial; color: rgb(51, 51, 51); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; white-space: normal;\"><blockquote style=\"margin: 0px; padding: 5px 10px; background: none; border-top: none; border-right: none; border-bottom: none; border-left: 5px solid rgb(221, 221, 221); border-image: initial;\"><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; color: rgb(119, 119, 119);\">③将Cookie放入到HTTP响应报头，将Cookie插入到一个 Set-Cookie HTTP请求报头中。</p></blockquote></blockquote><blockquote style=\"margin: 0px; padding: 5px 10px; background: none rgb(255, 255, 255); border-top: none; border-right: none; border-bottom: none; border-left: 5px solid rgb(221, 221, 221); border-image: initial; color: rgb(51, 51, 51); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; white-space: normal;\"><blockquote style=\"margin: 0px; padding: 5px 10px; background: none; border-top: none; border-right: none; border-bottom: none; border-left: 5px solid rgb(221, 221, 221); border-image: initial;\"><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; color: rgb(119, 119, 119);\">④发送该HTTP响应报文。</p></blockquote></blockquote><blockquote style=\"margin: 0px; padding: 5px 10px; background: none rgb(255, 255, 255); border-top: none; border-right: none; border-bottom: none; border-left: 5px solid rgb(221, 221, 221); border-image: initial; color: rgb(51, 51, 51); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; white-space: normal;\"><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; color: rgb(119, 119, 119);\">2、设置存储Cookie</p></blockquote><blockquote style=\"margin: 0px; padding: 5px 10px; background: none rgb(255, 255, 255); border-top: none; border-right: none; border-bottom: none; border-left: 5px solid rgb(221, 221, 221); border-image: initial; color: rgb(51, 51, 51); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; white-space: normal;\"><blockquote style=\"margin: 0px; padding: 5px 10px; background: none; border-top: none; border-right: none; border-bottom: none; border-left: 5px solid rgb(221, 221, 221); border-image: initial;\"><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; color: rgb(119, 119, 119);\">&nbsp;</p><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; color: rgb(119, 119, 119);\">浏览器收到该响应报文之后，根据报文头里的Set-Cookied特殊的指示，生成相应的Cookie，保存在客户端。该Cookie里面记录着用户当前的信息。</p></blockquote></blockquote><blockquote style=\"margin: 0px; padding: 5px 10px; background: none rgb(255, 255, 255); border-top: none; border-right: none; border-bottom: none; border-left: 5px solid rgb(221, 221, 221); border-image: initial; color: rgb(51, 51, 51); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; white-space: normal;\"><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; color: rgb(119, 119, 119);\">3、发送Cookie</p></blockquote><blockquote style=\"margin: 0px; padding: 5px 10px; background: none rgb(255, 255, 255); border-top: none; border-right: none; border-bottom: none; border-left: 5px solid rgb(221, 221, 221); border-image: initial; color: rgb(51, 51, 51); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; white-space: normal;\"><blockquote style=\"margin: 0px; padding: 5px 10px; background: none; border-top: none; border-right: none; border-bottom: none; border-left: 5px solid rgb(221, 221, 221); border-image: initial;\"><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; color: rgb(119, 119, 119);\">&nbsp;</p><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; color: rgb(119, 119, 119);\">当用户再次访问该网站时，浏览器首先检查所有存储的Cookies，如果某个存在该网站的Cookie（即该Cookie所声明的作用范围大于等于将要请求的资源），则把该cookie附在请求资源的HTTP请求头上发送给服务器。</p></blockquote></blockquote><blockquote style=\"margin: 0px; padding: 5px 10px; background: none rgb(255, 255, 255); border-top: none; border-right: none; border-bottom: none; border-left: 5px solid rgb(221, 221, 221); border-image: initial; color: rgb(51, 51, 51); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; white-space: normal;\"><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; color: rgb(119, 119, 119);\">4、读取Cookie</p></blockquote><blockquote style=\"margin: 0px; padding: 5px 10px; background: none rgb(255, 255, 255); border-top: none; border-right: none; border-bottom: none; border-left: 5px solid rgb(221, 221, 221); border-image: initial; color: rgb(51, 51, 51); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; white-space: normal;\"><blockquote style=\"margin: 0px; padding: 5px 10px; background: none; border-top: none; border-right: none; border-bottom: none; border-left: 5px solid rgb(221, 221, 221); border-image: initial;\"><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; color: rgb(119, 119, 119);\">&nbsp;服务器接收到用户的HTTP请求报文之后，从报文头获取到该用户的Cookie，从里面找到所需要的东西。</p></blockquote></blockquote><p style=\"margin: 10px auto; padding: 0px; color: rgb(51, 51, 51); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">（3）作用</p><blockquote style=\"margin: 0px; padding: 5px 10px; background: none rgb(255, 255, 255); border-top: none; border-right: none; border-bottom: none; border-left: 5px solid rgb(221, 221, 221); border-image: initial; color: rgb(51, 51, 51); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; white-space: normal;\"><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; color: rgb(119, 119, 119);\">Cookie的根本作用就是在客户端存储用户访问网站的一些信息。典型的应用有：</p><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; color: rgb(119, 119, 119);\">1、记住密码，下次自动登录。</p><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; color: rgb(119, 119, 119);\">2、购物车功能。</p><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; color: rgb(119, 119, 119);\">3、记录用户浏览数据，进行商品（广告）推荐。</p></blockquote><p style=\"margin: 10px auto; padding: 0px; color: rgb(51, 51, 51); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">（4）缺陷</p><blockquote style=\"margin: 0px; padding: 5px 10px; background: none rgb(255, 255, 255); border-top: none; border-right: none; border-bottom: none; border-left: 5px solid rgb(221, 221, 221); border-image: initial; color: rgb(51, 51, 51); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; white-space: normal;\"><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; color: rgb(119, 119, 119);\">①Cookie会被附加在每个HTTP请求中，所以无形中增加了流量。</p><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; color: rgb(119, 119, 119);\">②由于在HTTP请求中的Cookie是明文传递的，所以安全性成问题。（除非用HTTPS）</p><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; color: rgb(119, 119, 119);\">③Cookie的大小限制在4KB左右。对于复杂的存储需求来说是不够用的。</p></blockquote><p style=\"margin: 10px auto; padding: 0px; color: rgb(51, 51, 51); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">&nbsp;</p><p style=\"margin: 10px auto; padding: 0px; color: rgb(51, 51, 51); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">二、Session详解</p><p style=\"margin: 10px auto; padding: 0px; color: rgb(51, 51, 51); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">（1）简介</p><blockquote style=\"margin: 0px; padding: 5px 10px; background: none rgb(255, 255, 255); border-top: none; border-right: none; border-bottom: none; border-left: 5px solid rgb(221, 221, 221); border-image: initial; color: rgb(51, 51, 51); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; white-space: normal;\"><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; color: rgb(119, 119, 119);\">Session代表服务器与浏览器的一次会话过程，这个过程是连续的，也可以时断时续的。Session是一种服务器端的机制，Session 对象用来存储特定用户会话所需的信息。</p><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; color: rgb(119, 119, 119);\">&nbsp;</p><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; color: rgb(119, 119, 119);\">Session由服务端生成，保存在服务器的内存、缓存、硬盘或数据库中。</p></blockquote><p style=\"margin: 10px auto; padding: 0px; color: rgb(51, 51, 51); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">（2）工作原理</p><blockquote style=\"margin: 0px; padding: 5px 10px; background: none rgb(255, 255, 255); border-top: none; border-right: none; border-bottom: none; border-left: 5px solid rgb(221, 221, 221); border-image: initial; color: rgb(51, 51, 51); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; white-space: normal;\"><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; color: rgb(119, 119, 119);\">1、创建Session</p></blockquote><blockquote style=\"margin: 0px; padding: 5px 10px; background: none rgb(255, 255, 255); border-top: none; border-right: none; border-bottom: none; border-left: 5px solid rgb(221, 221, 221); border-image: initial; color: rgb(51, 51, 51); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; white-space: normal;\"><blockquote style=\"margin: 0px; padding: 5px 10px; background: none; border-top: none; border-right: none; border-bottom: none; border-left: 5px solid rgb(221, 221, 221); border-image: initial;\"><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; color: rgb(119, 119, 119);\">当用户访问到一个服务器，如果服务器启用Session，服务器就要为该用户创建一个SESSION，在创建这个SESSION的时候，服务器首先检查这个用户发来的请求里是否包含了一个SESSION ID，如果包含了一个SESSION ID则说明之前该用户已经登陆过并为此用户创建过SESSION，那服务器就按照这个SESSION ID把这个SESSION在服务器的内存中查找出来（如果查找不到，就有可能为他新创建一个），如果客户端请求里不包含有SESSION ID，则为该客户端创建一个SESSION并生成一个与此SESSION相关的SESSION ID。这个SESSION ID是唯一的、不重复的、不容易找到规律的字符串，这个SESSION ID将被在本次响应中返回到客户端保存，而保存这个SESSION ID的正是COOKIE，这样在交互过程中浏览器可以自动的按照规则把这个标识发送给服务器。&nbsp;</p></blockquote><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; color: rgb(119, 119, 119);\">2、使用Session</p></blockquote><blockquote style=\"margin: 0px; padding: 5px 10px; background: none rgb(255, 255, 255); border-top: none; border-right: none; border-bottom: none; border-left: 5px solid rgb(221, 221, 221); border-image: initial; color: rgb(51, 51, 51); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; white-space: normal;\"><blockquote style=\"margin: 0px; padding: 5px 10px; background: none; border-top: none; border-right: none; border-bottom: none; border-left: 5px solid rgb(221, 221, 221); border-image: initial;\"><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; color: rgb(119, 119, 119);\">我们知道在IE中，我们可以在工具的Internet选项中把Cookie禁止，那么会不会出现把客户端的Cookie禁止了，那么SESSIONID就无法再用了呢？找了一些资料说明，可以有其他机制在COOKIE被禁止时仍然能够把Session id传递回服务器。</p><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; color: rgb(119, 119, 119);\">经常被使用的一种技术叫做URL重写，就是把Session id直接附加在URL路径的后面一种是作为URL路径的附加信息,表现形式为：&nbsp;</p><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; color: rgb(119, 119, 119);\">http://…./xxx;jSession=ByOK3vjFD75aPnrF7C2HmdnV6QZcEbzWoWiBYEnLerjQ99zWpBng!-145788764；&nbsp;</p><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; color: rgb(119, 119, 119);\">另一种是作为查询字符串附加在URL后面，表现形式为：&nbsp;</p><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; color: rgb(119, 119, 119);\">http://…../xxx?jSession=ByOK3vjFD75aPnrF7C2HmdnV6QZcEbzWoWiBYEnLerjQ99zWpBng!-145788764&nbsp;</p><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; color: rgb(119, 119, 119);\">还有一种就是表单隐藏字段。就是服务器会自动修改表单，添加一个隐藏字段，以便在表单提交时能够把Session id传递回服务器。</p></blockquote></blockquote><p style=\"margin: 10px auto; padding: 0px; color: rgb(51, 51, 51); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">（3）作用</p><blockquote style=\"margin: 0px; padding: 5px 10px; background: none rgb(255, 255, 255); border-top: none; border-right: none; border-bottom: none; border-left: 5px solid rgb(221, 221, 221); border-image: initial; color: rgb(51, 51, 51); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; white-space: normal;\"><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; color: rgb(119, 119, 119);\">&nbsp;</p><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; color: rgb(119, 119, 119);\">Session的根本作用就是在服务端存储用户和服务器会话的一些信息。典型的应用有：</p><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; color: rgb(119, 119, 119);\">1、判断用户是否登录。</p><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; color: rgb(119, 119, 119);\">2、购物车功能。</p><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; color: rgb(119, 119, 119);\">&nbsp;</p></blockquote><p style=\"margin: 10px auto; padding: 0px; color: rgb(51, 51, 51); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">三、Cookie和Session的区别</p><blockquote style=\"margin: 0px; padding: 5px 10px; background: none rgb(255, 255, 255); border-top: none; border-right: none; border-bottom: none; border-left: 5px solid rgb(221, 221, 221); border-image: initial; color: rgb(51, 51, 51); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; white-space: normal;\"><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; color: rgb(119, 119, 119);\">1、存放位置不同</p></blockquote><blockquote style=\"margin: 0px; padding: 5px 10px; background: none rgb(255, 255, 255); border-top: none; border-right: none; border-bottom: none; border-left: 5px solid rgb(221, 221, 221); border-image: initial; color: rgb(51, 51, 51); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; white-space: normal;\"><blockquote style=\"margin: 0px; padding: 5px 10px; background: none; border-top: none; border-right: none; border-bottom: none; border-left: 5px solid rgb(221, 221, 221); border-image: initial;\"><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; color: rgb(119, 119, 119);\">Cookie保存在客户端，Session保存在服务端。</p></blockquote></blockquote><blockquote style=\"margin: 0px; padding: 5px 10px; background: none rgb(255, 255, 255); border-top: none; border-right: none; border-bottom: none; border-left: 5px solid rgb(221, 221, 221); border-image: initial; color: rgb(51, 51, 51); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; white-space: normal;\"><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; color: rgb(119, 119, 119);\">2 、存取方式的不同</p></blockquote><blockquote style=\"margin: 0px; padding: 5px 10px; background: none rgb(255, 255, 255); border-top: none; border-right: none; border-bottom: none; border-left: 5px solid rgb(221, 221, 221); border-image: initial; color: rgb(51, 51, 51); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; white-space: normal;\"><blockquote style=\"margin: 0px; padding: 5px 10px; background: none; border-top: none; border-right: none; border-bottom: none; border-left: 5px solid rgb(221, 221, 221); border-image: initial;\"><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; color: rgb(119, 119, 119);\">&nbsp;Cookie中只能保管ASCII字符串，假如需求存取Unicode字符或者二进制数据，需求先进行编码。Cookie中也不能直接存取Java对象。若要存储略微复杂的信息，运用Cookie是比拟艰难的。&nbsp;</p><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; color: rgb(119, 119, 119);\">而Session中能够存取任何类型的数据，包括而不限于String、Integer、List、Map等。Session中也能够直接保管Java Bean乃至任何Java类，对象等，运用起来十分便当。能够把Session看做是一个Java容器类。&nbsp;</p></blockquote></blockquote><blockquote style=\"margin: 0px; padding: 5px 10px; background: none rgb(255, 255, 255); border-top: none; border-right: none; border-bottom: none; border-left: 5px solid rgb(221, 221, 221); border-image: initial; color: rgb(51, 51, 51); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; white-space: normal;\"><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; color: rgb(119, 119, 119);\">3、安全性（隐私策略）的不同&nbsp;</p></blockquote><blockquote style=\"margin: 0px; padding: 5px 10px; background: none rgb(255, 255, 255); border-top: none; border-right: none; border-bottom: none; border-left: 5px solid rgb(221, 221, 221); border-image: initial; color: rgb(51, 51, 51); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; white-space: normal;\"><blockquote style=\"margin: 0px; padding: 5px 10px; background: none; border-top: none; border-right: none; border-bottom: none; border-left: 5px solid rgb(221, 221, 221); border-image: initial;\"><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; color: rgb(119, 119, 119);\">Cookie存储在浏览器中，对客户端是可见的，客户端的一些程序可能会窥探、复制以至修正Cookie中的内容。而Session存储在服务器上，对客户端是透明的，不存在敏感信息泄露的风险。 假如选用Cookie，比较好的方法是，敏感的信息如账号密码等尽量不要写到Cookie中。最好是像Google、Baidu那样将Cookie信息加密，提交到服务器后再进行解密，保证Cookie中的信息只要本人能读得懂。而假如选择Session就省事多了，反正是放在服务器上，Session里任何隐私都能够有效的保护。&nbsp;</p></blockquote></blockquote><p style=\"margin: 10px auto; padding: 0px; color: rgb(51, 51, 51); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">4、有效期上的不同&nbsp;</p><blockquote style=\"margin: 0px; padding: 5px 10px; background: none rgb(255, 255, 255); border-top: none; border-right: none; border-bottom: none; border-left: 5px solid rgb(221, 221, 221); border-image: initial; color: rgb(51, 51, 51); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; white-space: normal;\"><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; color: rgb(119, 119, 119);\">只需要设置Cookie的过期时间属性为一个很大很大的数字，Cookie就可以在浏览器保存很长时间。 由于Session依赖于名为JSESSIONID的Cookie，而Cookie JSESSIONID的过期时间默许为–1，只需关闭了浏览器（一次会话结束），该Session就会失效。</p></blockquote><p style=\"margin: 10px auto; padding: 0px; color: rgb(51, 51, 51); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">5、对服务器造成的压力不同&nbsp;</p><blockquote style=\"margin: 0px; padding: 5px 10px; background: none rgb(255, 255, 255); border-top: none; border-right: none; border-bottom: none; border-left: 5px solid rgb(221, 221, 221); border-image: initial; color: rgb(51, 51, 51); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; white-space: normal;\"><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; color: rgb(119, 119, 119);\">Session是保管在服务器端的，每个用户都会产生一个Session。假如并发访问的用户十分多，会产生十分多的Session，耗费大量的内存。而Cookie保管在客户端，不占用服务器资源。假如并发阅读的用户十分多，Cookie是很好的选择。</p></blockquote><p style=\"margin: 10px auto; padding: 0px; color: rgb(51, 51, 51); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">6、&nbsp;跨域支持上的不同&nbsp;</p><blockquote style=\"margin: 0px; padding: 5px 10px; background: none rgb(255, 255, 255); border-top: none; border-right: none; border-bottom: none; border-left: 5px solid rgb(221, 221, 221); border-image: initial; color: rgb(51, 51, 51); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; white-space: normal;\"><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; color: rgb(119, 119, 119);\">Cookie支持跨域名访问，例如将domain属性设置为“.baidu.com”，则以“.baidu.com”为后缀的一切域名均能够访问该Cookie。跨域名Cookie如今被普遍用在网络中。而Session则不会支持跨域名访问。Session仅在他所在的域名内有效。</p></blockquote><p><br/></p><p style=\"margin-top: 1.4em; margin-bottom: 1.4em;\"><span style=\"font-weight: 600;\">Token 和 Session 的区别：</span></p><p style=\"margin-top: 1.4em; margin-bottom: 1.4em;\">session和 token并不矛盾，作为身份认证token安全性比session好，因为每个请求都有签名还能防止监听以及重放攻击，而session就必须靠链路层来保障通讯安全了。如上所说，如果你需要实现有状态的会话，仍然可以增加session来在服务器端保存一些状态。</p><p style=\"margin-top: 1.4em; margin-bottom: 1.4em;\">App通常用restful api跟server打交道。Rest是stateless的，也就是app不需要像browser那样用cookie来保存session,因此用session token来标示自己就够了，session/state由api server的逻辑处理。如果你的后端不是stateless的rest api,那么你可能需要在app里保存session.可以在app里嵌入webkit,用一个隐藏的browser来管理cookie session.</p><p style=\"margin-top: 1.4em; margin-bottom: 1.4em;\">Session是一种HTTP存储机制，目的是为无状态的HTTP提供的持久机制。所谓Session认证只是简单的把User信息存储到Session里，因为SID的不可预测性，暂且认为是安全的。这是一种认证手段。而Token，如果指的是OAuth Token或类似的机制的话，提供的是 认证 和 授权 ，认证是针对用户，授权是针对App。</p><p style=\"margin-top: 1.4em; margin-bottom: 1.4em;\">其目的是让 某App有权利访问 某用户 的信息。这里的Token是唯一的。不可以转移到其它App上，也不可以转到其它 用户 上。转过来说Session。Session只提供一种简单的认证，即有此SID，即认为有此User的全部权利。是需要严格保密的，这个数据应该只保存在站方，不应该共享给其它网站或者第三方App。所以简单来说，如果你的用户数据可能需要和第三方共享，或者允许第三方调用API接口，用Token。如果永远只是自己的网站，自己的App，用什么就无所谓了。</p><p style=\"margin-top: 1.4em; margin-bottom: 1.4em;\">token就是令牌，比如你授权（登录）一个程序时，他就是个依据，判断你是否已经授权该软件；cookie就是写在客户端的一个txt文件，里面包括你登录信息之类的，这样你下次在登录某个网站，就会自动调用cookie自动登录用户名；session和cookie差不多，只是session是写在服务器端的文件，也需要在客户端写入cookie文件，但是文件里是你的浏览器编号.Session的状态是存储在服务器端，客户端只有session id；而Token的状态是存储在客户端。</p><p class=\"ztext-empty-paragraph\" style=\"margin-top: -0.8em; margin-bottom: -0.8em;\"><br/></p><p><br/></p>', 'Cookie、Session', 'Cookie和Session的工作原理');
INSERT INTO `news` VALUES ('14', '1', 'cookie 和session的工作流程', '/upload/news/15666133301178120.jpg', '1566613330', '0', '客户端访问服务器，服务器调用response.addCookie()方法，产生响应时，会产生set-cookie响应头，将cookie文本发送给客户端...', '黄绍模', '<h1 class=\"postTitle\" style=\"margin: 0px 0px 20px; padding: 0px; font-size: 28px; font-weight: 400; line-height: 1.8; color: rgb(51, 51, 51); font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\"><a class=\"postTitle2\" href=\"https://www.cnblogs.com/little-ab/articles/7123836.html\" style=\"margin: 0px; padding: 0px; color: rgb(51, 51, 51); text-decoration-line: none;\">cookie 和session的工作流程</a></h1><p style=\"margin: 10px auto; padding: 0px;\">cookie的工作流程：<br/>客户端访问服务器，服务器调用response.addCookie()方法，产生响应时，会产生set-cookie响应头，将cookie文本发送给客户端，客户端会将cookie文本保存起来，当客户端再次请求服务器时，会产生cookie请求头，将之前服务器发送的cookie信息，再发送给服务器，服务器就可以根据cookie信息跟踪客户端的状态。<br/><br/>----------<br/>cookie的分类：<br/>1 存放在客户端浏览器的缓存中，当浏览器不关闭，cookie信息一起存在，浏览器一关闭，cookie消失<br/>2 存放在客户端的文件中，并可以设置cookie过期时间，过期时间之内，即使浏览器关闭，也可以将cookie信息发送给服务器，超过过期时间，cookie消失。<br/><br/>cookie信息是以文本方式存放在客户端的，所以容易引起一些安全隐患，所以不要把隐秘信息以cookie方式保存。<br/><br/></p><p>&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: #569cd6;\">function</span> <span style=\"color: #dcdcaa;\">selectAll</span>() {</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: #569cd6;\">var</span> <span style=\"color: #9cdcfe;\">selectall</span> = <span style=\"color: #9cdcfe;\">document</span>.<span style=\"color: #dcdcaa;\">getElementById</span>(<span style=\"color: #ce9178;\">&quot;selectAll&quot;</span>).<span style=\"color: #9cdcfe;\">checked</span></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: #569cd6;\">var</span> <span style=\"color: #9cdcfe;\">selectsinger</span> = <span style=\"color: #9cdcfe;\">document</span>.<span style=\"color: #dcdcaa;\">getElementsByName</span>(<span style=\"color: #ce9178;\">&quot;selectSinger&quot;</span>);</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: #c586c0;\">if</span> (<span style=\"color: #9cdcfe;\">selectall</span> == <span style=\"color: #569cd6;\">true</span>) {</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: #c586c0;\">for</span> (<span style=\"color: #569cd6;\">var</span> <span style=\"color: #9cdcfe;\">i</span> = <span style=\"color: #b5cea8;\">0</span>; <span style=\"color: #9cdcfe;\">i</span> &lt; <span style=\"color: #9cdcfe;\">selectsinger</span>.<span style=\"color: #9cdcfe;\">length</span>; <span style=\"color: #9cdcfe;\">i</span>++) {</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: #9cdcfe;\">selectsinger</span>[<span style=\"color: #9cdcfe;\">i</span>].<span style=\"color: #9cdcfe;\">checked</span> = <span style=\"color: #9cdcfe;\">selectall</span>;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <span style=\"color: #c586c0;\">else</span> {</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: #c586c0;\">for</span> (<span style=\"color: #569cd6;\">var</span> <span style=\"color: #9cdcfe;\">i</span> = <span style=\"color: #b5cea8;\">0</span>; <span style=\"color: #9cdcfe;\">i</span> &lt; <span style=\"color: #9cdcfe;\">selectsinger</span>.<span style=\"color: #9cdcfe;\">length</span>; <span style=\"color: #9cdcfe;\">i</span>++) {</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: #9cdcfe;\">selectsinger</span>[<span style=\"color: #9cdcfe;\">i</span>].<span style=\"color: #9cdcfe;\">checked</span> = <span style=\"color: #9cdcfe;\">selectall</span>;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</p><p>&nbsp;&nbsp;&nbsp;&nbsp;};</p><p><br/></p><p class=\"artdir1\" style=\"margin: 10px auto; padding: 0px;\"><span style=\"margin: 0px; padding: 0px; font-size: 18px;\"><strong style=\"margin: 0px; padding: 0px;\"><span style=\"margin: 0px; padding: 0px; color: rgb(255, 0, 0);\">验证</span></strong></span></p><p class=\"artcon\" style=\"margin: 10px auto; padding: 0px;\">我们来验证一下。</p><p class=\"artcon\" style=\"margin: 10px auto; padding: 0px;\"><img src=\"http://www.uml.org.cn/site/images/20161124405.jpg\" alt=\"\"/></p><p class=\"artcon\" style=\"margin: 10px auto; padding: 0px;\">现在打开 http://localhost:3000</p><p class=\"artcon\" style=\"margin: 10px auto; padding: 0px;\">我们看到 Request Headers 并没有 Cookie 这个字段</p><p class=\"artcon\" style=\"margin: 10px auto; padding: 0px;\">但是 Response Headers 有了 Set-Cookie 这个字段</p><p class=\"artcon\" style=\"margin: 10px auto; padding: 0px;\"><img src=\"http://www.uml.org.cn/site/images/20161124406.jpg\" alt=\"\"/></p><p class=\"artcon\" style=\"margin: 10px auto; padding: 0px;\">现在我们刷新一下页面，相当于重新向 http://localhost:3000/ 这个地址发起了一次请求。</p><p class=\"artcon\" style=\"margin: 10px auto; padding: 0px;\"><img src=\"http://www.uml.org.cn/site/images/20161124407.PNG\" alt=\"\"/></p><p class=\"artcon\" style=\"margin: 10px auto; padding: 0px;\">现在我们就可以看到 Cookie 字段已经带上了，再刷新几次看 Cookie 也还是在的。</p><p class=\"artcon\" style=\"margin: 10px auto; padding: 0px;\">document.cookie</p><p class=\"artcon\" style=\"margin: 10px auto; padding: 0px;\">JS 提供了获取 Cookie 的方法：document.cookie，我们先去设置多几个 Cookie。</p><p class=\"artcon\" style=\"margin: 10px auto; padding: 0px;\"><img src=\"http://www.uml.org.cn/site/images/20161124408.jpg\" alt=\"\"/></p><p class=\"artcon\" style=\"margin: 10px auto; padding: 0px;\"><img src=\"http://www.uml.org.cn/site/images/20161124409.PNg\" alt=\"\"/></p><p class=\"artcon\" style=\"margin: 10px auto; padding: 0px;\">我们可以看到，Cookie 就是一段字符串。但这个字符串是有格式的，由键值对 key=value 构成，键值对之间由一个分号和一个空格隔开。</p><p class=\"artdir1\" style=\"margin: 10px auto; padding: 0px;\">什么是 Cookie</p><p class=\"artcon\" style=\"margin: 10px auto; padding: 0px;\">说了这么多，大家应该知道 Cookie 是什么吧。整理一下有以下几个点：</p><p class=\"artcon\" style=\"margin: 10px auto; padding: 0px;\">Cookie 就是浏览器储存在用户电脑上的一小段文本文件</p><p class=\"artcon\" style=\"margin: 10px auto; padding: 0px;\">Cookie 是纯文本格式，不包含任何可执行的代码</p><p class=\"artcon\" style=\"margin: 10px auto; padding: 0px;\">Cookie 由键值对构成，由分号和空格隔开</p><p class=\"artcon\" style=\"margin: 10px auto; padding: 0px;\">Cookie 虽然是存储在浏览器，但是通常由服务器端进行设置</p><p class=\"artcon\" style=\"margin: 10px auto; padding: 0px;\">Cookie 的大小限制在 4kb 左右</p><p style=\"margin: 10px auto; padding: 0px;\">&nbsp;</p><p style=\"margin: 10px auto; padding: 0px;\"><br/>----------<br/>session的工作流程：<br/>客户端访问服务器，服务器调用request.getSession()方法，产生session对象，用于跟踪用户的<br/>状态，同时，给session对象分配一个唯一标识sessionId。为了管理session对象，以sessionId为键，以session对象为值，封装成Map集合。产生响应时，将sessionId以cookie方式发送给客户端，存放在客户端浏览器的缓存中。当客户端再次请求服务器，会将sessionId以cookie请求头的方式发送给服务器，服务器得到sessionId后，从Map集合中，得到session对象，从而跟踪状态。</p><p><br/></p>', 'cookie 、session', 'cookie 和session的工作流程');
INSERT INTO `news` VALUES ('16', '1', 'Js内置对象', '/upload/news/15667424217185549.png', '1566742422', '0', 'JS标准内置对象分为构造器对象与其他对象', '黄绍模', '<h1 class=\"postTitle\" style=\"margin: 0px 0px 20px; padding: 0px; font-size: 28px; font-weight: 400; line-height: 1.8; color: rgb(51, 51, 51); font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\"><a class=\"postTitle2\" href=\"https://www.cnblogs.com/yan-yubo/p/Javascript-built_in_objects.html\" style=\"margin: 0px; padding: 0px; color: rgb(51, 51, 51); text-decoration-line: none;\">Js内置对象</a></h1><h1 style=\"margin: 10px 0px; padding: 0px; font-size: 28px; line-height: 1.5;\">标准内置对象</h1><ul style=\"margin-bottom: 1em; margin-left: 40px; padding: 0px;\" class=\" list-paddingleft-2\"><li><h2 style=\"margin: 20px 0px; padding: 0px; font-size: 21px; line-height: 1.5;\">构造器对象</h2></li></ul><p style=\"margin: 10px auto; padding: 0px;\">&nbsp; &nbsp; &nbsp; &nbsp;Object &nbsp; &nbsp;Boolean &nbsp; &nbsp;String &nbsp; &nbsp; Number &nbsp; &nbsp; Function &nbsp; &nbsp; Array &nbsp; &nbsp; &nbsp;RegExp &nbsp; &nbsp; &nbsp;Date &nbsp; &nbsp; Error</p><ul style=\"margin-bottom: 1em; margin-left: 40px; padding: 0px;\" class=\" list-paddingleft-2\"><li><h2 style=\"margin: 20px 0px; padding: 0px; font-size: 21px; line-height: 1.5;\">其他对象</h2></li></ul><p style=\"margin: 10px auto; padding: 0px;\">&nbsp; &nbsp; &nbsp; &nbsp;Math &nbsp; &nbsp; Json &nbsp; &nbsp; 全局对象</p><p style=\"margin: 10px auto; padding: 0px;\"><br/></p><p><img src=\"/images/ueditor/1165629212623769600.png\" title=\"\" alt=\"image.png\"/></p><p><img src=\"/images/ueditor/1165629701063053312.png\" title=\"\" alt=\"image.png\"/></p><p><br/></p><p><span style=\"font-size: 14px;\">1.全局对象</span></p><p><span style=\"font-size: 14px;\">&nbsp; &nbsp; 属性:</span></p><p><span style=\"font-size: 14px;\">&nbsp; &nbsp; &nbsp;</span></p><pre class=\"brush:js;toolbar:false\">&nbsp;&nbsp;&nbsp;&nbsp;Infinity&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;指定一个正负无穷大的数值\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;NaN&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;指定一个&nbsp;“非数字”&nbsp;值\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;undefined&nbsp;&nbsp;&nbsp;&nbsp;指定一个未被赋值的变</pre><p><span style=\"font-size: 14px;\"></span><br/></p><p><span style=\"font-size: 14px;\">&nbsp; 方法:</span></p><p><span style=\"font-size: 14px;\">&nbsp; &nbsp; &nbsp; decodeURI()&nbsp; &nbsp; &nbsp; &nbsp;为加密的URI进行解码</span></p><p><span style=\"font-size: 14px;\">&nbsp; &nbsp; &nbsp; &nbsp;decodeURIComponent() 为加密的URI组件解码</span></p><p><span style=\"font-size: 14px;\">&nbsp; &nbsp; &nbsp; &nbsp;encodeURI()&nbsp; &nbsp; &nbsp; &nbsp;将字符串加密为URI</span></p><p><span style=\"font-size: 14px;\">&nbsp; &nbsp; &nbsp; &nbsp;encodeURIComponent() 将字符串加密为URI组件</span></p><p><span style=\"font-size: 14px;\">&nbsp; &nbsp; &nbsp; &nbsp;escape(string)&nbsp; &nbsp; &nbsp; 加密一个字符串</span></p><p><span style=\"font-size: 14px;\">&nbsp; &nbsp; &nbsp; &nbsp;使用escape()对一个字符串进行解码</span></p><p><span style=\"font-size: 14px;\">&nbsp; &nbsp; &nbsp; &nbsp;eval_r(string)&nbsp; &nbsp; &nbsp; &nbsp;判断一个字符串并将其以脚本代码的形式执行</span></p><p><span style=\"font-size: 14px;\">&nbsp; &nbsp; &nbsp; &nbsp;isFinite(number)&nbsp; &nbsp; &nbsp;检测一个值是否为一个有限数字,返回True或False</span></p><p><span style=\"font-size: 14px;\">&nbsp; &nbsp; &nbsp; &nbsp;isNaN(string)&nbsp; &nbsp; &nbsp; 检测一个值是否不是一个有限数字</span></p><p><span style=\"font-size: 14px;\">&nbsp; &nbsp; &nbsp; &nbsp;Number()&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;将一个对象的值转换为一个数字</span></p><p><span style=\"font-size: 14px;\">&nbsp; &nbsp; &nbsp; &nbsp;parseFloat(string)&nbsp; &nbsp; 将一个字符串解析为一个浮点数字</span></p><p><span style=\"font-size: 14px;\">&nbsp; &nbsp; &nbsp; &nbsp;parseInt(string)&nbsp; &nbsp; &nbsp;将一个字符串解析为一个整数,不是四舍五入操作,而是切尾</span></p><p><span style=\"font-size: 14px;\">&nbsp; &nbsp; &nbsp; &nbsp;String(object)&nbsp; &nbsp; &nbsp; 将一个对象值转换为一个字符串</span></p><p><span style=\"font-size: 14px;\">&nbsp; &nbsp; &nbsp; &nbsp;number(object)</span></p><p><span style=\"font-size: 14px;\">&nbsp;</span></p><p><span style=\"font-size: 14px;\">2.Number</span></p><p><span style=\"font-size: 14px;\">&nbsp; &nbsp;属性:</span></p><p><span style=\"font-size: 14px;\">&nbsp; &nbsp; &nbsp; MAX_VALUE&nbsp; &nbsp; &nbsp; &nbsp;The largest possible value a number in JavaScript can have 1.7976931348623157E+308</span></p><p><span style=\"font-size: 14px;\">&nbsp; &nbsp; &nbsp; MIN_VALUE&nbsp; &nbsp; &nbsp; &nbsp;The smallest possible value a number in JavaScript can have 5E-324</span></p><p><span style=\"font-size: 14px;\">&nbsp; &nbsp; &nbsp; NaN&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Equal to a value that is not a number.</span></p><p><span style=\"font-size: 14px;\">&nbsp; &nbsp; &nbsp; NEGATIVE_INFINITY A value that is less than MIN_VALUE.</span></p><p><span style=\"font-size: 14px;\">&nbsp; &nbsp; &nbsp; POSOTIVE_INFINITY A value that is greater than MAX_VALUE.</span></p><p><span style=\"font-size: 14px;\">&nbsp; &nbsp; &nbsp; prototype&nbsp; &nbsp; &nbsp; &nbsp;A static property of the Number object</span></p><p><span style=\"font-size: 14px;\">&nbsp; &nbsp;方法:</span></p><p><span style=\"font-size: 14px;\">&nbsp; &nbsp; &nbsp; toString&nbsp; &nbsp; &nbsp; &nbsp;Returns a string representing the specified object</span></p><p><span style=\"font-size: 14px;\">&nbsp; &nbsp; &nbsp; valueOf()&nbsp; &nbsp; &nbsp; 返回数学对象的原始值</span></p><p><span style=\"font-size: 14px;\">&nbsp;</span></p><p><span style=\"font-size: 14px;\">3.Boolean</span></p><p><span style=\"font-size: 14px;\">&nbsp; &nbsp;属性:</span></p><p><span style=\"font-size: 14px;\">&nbsp; &nbsp; &nbsp; constructor 所建立对象的函数参考</span></p><p><span style=\"font-size: 14px;\">&nbsp; &nbsp; &nbsp; prototype&nbsp; &nbsp; 能够为对象加入的属性和方法</span></p><p><span style=\"font-size: 14px;\">&nbsp; 方法:</span></p><p><span style=\"font-size: 14px;\">&nbsp; &nbsp; &nbsp; toSource()&nbsp; &nbsp; 显示对象的源代码</span></p><p><span style=\"font-size: 14px;\">&nbsp; &nbsp; &nbsp; toString()&nbsp; &nbsp; 将布尔值转换为字符串,并且返回结果</span></p><p><span style=\"font-size: 14px;\">&nbsp; &nbsp; &nbsp; valueOf()&nbsp; &nbsp; 返回布尔对象的原始值</span></p><p><span style=\"font-size: 14px;\">&nbsp;</span></p><p><span style=\"font-size: 14px;\">4.String</span></p><p><span style=\"font-size: 14px;\">&nbsp; &nbsp;属性:</span></p><p><span style=\"font-size: 14px;\">&nbsp; &nbsp; &nbsp; constructor 所建立对象的函数参考</span></p><p><span style=\"font-size: 14px;\">&nbsp; &nbsp; &nbsp; prototype&nbsp; &nbsp; 能够为对象加入的属性和方法</span></p><p><span style=\"font-size: 14px;\">&nbsp; &nbsp; &nbsp; length&nbsp; &nbsp; &nbsp; 返回字符串的字符长度</span></p><p><span style=\"font-size: 14px;\">&nbsp; 方法 :</span></p><p><span style=\"font-size: 14px;\">&nbsp; &nbsp; &nbsp; anchor(&quot;name&quot;)用来把字符串转换为HTML锚点标记内(&lt;A NAME=&gt;)</span></p><p><span style=\"font-size: 14px;\">&nbsp; &nbsp; &nbsp; big()&nbsp; &nbsp; &nbsp; 把字符串中的文本变成大字体(&lt;BIG&gt;)</span></p><p><span style=\"font-size: 14px;\">&nbsp; &nbsp; &nbsp; blink()&nbsp; &nbsp; &nbsp;把字符串中的文本变成闪烁字体(&lt;BLINK&gt;)</span></p><p><span style=\"font-size: 14px;\">&nbsp; &nbsp; &nbsp; bold()&nbsp; &nbsp; &nbsp; 把字符串中的文本变成黑字体(&lt;B&gt;)</span></p><p><span style=\"font-size: 14px;\">&nbsp; &nbsp; &nbsp; fixed()&nbsp; &nbsp; &nbsp;把字符串中的文本变成固定间距字体,即电报形式(&lt;TT&gt;)</span></p><p><span style=\"font-size: 14px;\">&nbsp; &nbsp; &nbsp; fontcolor(color)设置字符串中文本的颜色(&lt;FONT COLOR=&gt;)</span></p><p><span style=\"font-size: 14px;\">&nbsp; &nbsp; &nbsp; Fontsize(size) 把字符串中的文本变成指定大小(&lt;FONTSIZE=&gt;)</span></p><p><span style=\"font-size: 14px;\">&nbsp; &nbsp; &nbsp; italics()&nbsp; &nbsp; 把字符串中的文本变成斜字体(&lt;I&gt;)</span></p><p><span style=\"font-size: 14px;\">&nbsp; &nbsp; &nbsp; Link(url)用来把字符串转换-HTML链接标记中(&lt;A HREF=&gt;)</span></p><p><span style=\"font-size: 14px;\">&nbsp; &nbsp; &nbsp; small()&nbsp; &nbsp; &nbsp;把字符串中的文本变成小字体(&lt;SMALL&gt;)</span></p><p><span style=\"font-size: 14px;\">&nbsp; &nbsp; &nbsp; strike()&nbsp; &nbsp; &nbsp;把字符串中的文本变成划掉字体(&lt;STRIKE&gt;)</span></p><p><span style=\"font-size: 14px;\">&nbsp; &nbsp; &nbsp; sub()&nbsp; &nbsp; &nbsp; 把字符串中的文本变成下标(subscript)字体((SUB&gt;)</span></p><p><span style=\"font-size: 14px;\">&nbsp; &nbsp; &nbsp; sup()&nbsp; &nbsp; &nbsp; 把字符串中的文本变成上标(superscript)字体(&lt;SUP&gt;)</span></p><p><span style=\"font-size: 14px;\">&nbsp; &nbsp; &nbsp; charAt(index) 返回指定索引处的字符</span></p><p><span style=\"font-size: 14px;\">&nbsp; &nbsp; &nbsp; charCodeAt(index)返回一个整数,该整数表示String对象中指定位置处的字符的Unicode编码</span></p><p><span style=\"font-size: 14px;\">&nbsp; &nbsp; &nbsp; concat(string2)连接两条或多条字符串</span></p><p><span style=\"font-size: 14px;\">&nbsp; &nbsp; &nbsp; fromCharCode(num1, num2, …, numN)获取指定的Unicode值并返回字符串</span></p><p><span style=\"font-size: 14px;\">&nbsp; &nbsp; &nbsp; indexOf(searchString, startIndex) 返回字符串中第一个出现指定字符串的位置</span></p><p><span style=\"font-size: 14px;\">&nbsp; &nbsp; &nbsp; lastlndexOf(searchString, startIndex) 返回字符串中最后一个出现指定字符串的位置</span></p><p><span style=\"font-size: 14px;\">&nbsp; &nbsp; &nbsp; match(regex) 在字符串中查找指定值</span></p><p><span style=\"font-size: 14px;\">&nbsp; &nbsp; &nbsp; replace(regex, newString)将字符串中的某些字符替换成其它字符</span></p><p><span style=\"font-size: 14px;\">&nbsp; &nbsp; &nbsp; search(regex) 针对某执行值对字符串进行查找</span></p><p><span style=\"font-size: 14px;\">&nbsp; &nbsp; &nbsp; slice(startIndex, endIndex)将部分字符抽出并在新的字符串中返回剩余部分</span></p><p><span style=\"font-size: 14px;\">&nbsp; &nbsp; &nbsp; split(delimiter)将字符串分配为数组</span></p><p><span style=\"font-size: 14px;\">&nbsp; &nbsp; &nbsp; substr(startIndex, length) 从startIndex取,取length个字符</span></p><p><span style=\"font-size: 14px;\">&nbsp; &nbsp; &nbsp; substring(startIndex, endIndex) 从startIndex和endIndex之间的字符,不包括endIndex</span></p><p><span style=\"font-size: 14px;\">&nbsp; &nbsp; &nbsp; toLowerCase() 把字符串中的文本变成小写</span></p><p><span style=\"font-size: 14px;\">&nbsp; &nbsp; &nbsp; toUpperCase() 把字符串中的文本变成大写</span></p><p><span style=\"font-size: 14px;\">&nbsp; &nbsp; &nbsp; toSource()&nbsp; &nbsp; 显示对象的源代码</span></p><p><span style=\"font-size: 14px;\">&nbsp; &nbsp; &nbsp; valueOf()&nbsp; &nbsp; 返回字符串对象的原始值</span></p><p><span style=\"font-size: 14px;\">&nbsp;</span></p><p><span style=\"font-size: 14px;\">5.Array</span></p><p><span style=\"font-size: 14px;\">&nbsp; &nbsp;属性:</span></p><p><span style=\"font-size: 14px;\">&nbsp; &nbsp; &nbsp; constructor 所建立对象的函数参考</span></p><p><span style=\"font-size: 14px;\">&nbsp; &nbsp; &nbsp; prototype&nbsp; &nbsp; 能够为对象加入的属性和方法</span></p><p><span style=\"font-size: 14px;\">&nbsp; &nbsp; &nbsp; index&nbsp; &nbsp; &nbsp; For an array created by a regular expression match, the zero-based index of the match in the string.</span></p><p><span style=\"font-size: 14px;\">　　input&nbsp; &nbsp; &nbsp; For an array created by a regular expression match, reflects the original string against which the regular expression was matched.</span></p><p><span style=\"font-size: 14px;\">　　length&nbsp; &nbsp; &nbsp; 获取数组元素的个数,即最大下标加1</span></p><p><span style=\"font-size: 14px;\">&nbsp; &nbsp;方法(13):</span></p><p><span style=\"font-size: 14px;\">　　concat(array1,arrayn)将两个或两个以上的数组值连接起来,合并后返回结果</span></p><p><span style=\"font-size: 14px;\">　　join(string) 将数组中元素合并为字符串,string为分隔符.如省略参数则直接合并,不再分隔</span></p><p><span style=\"font-size: 14px;\">　　pop()&nbsp; &nbsp; &nbsp; 移除数组中的最后一个元素并返回该元素</span></p><p><span style=\"font-size: 14px;\">　　push(value) 在数组的末尾加上一个或多个元素,并且返回新的数组长度值</span></p><p><span style=\"font-size: 14px;\">　　reverse()&nbsp; &nbsp; 颠倒数组中元素的顺序,反向排列</span></p><p><span style=\"font-size: 14px;\">　　shift()&nbsp; &nbsp; &nbsp;移除数组中的第一个元素并返回该元素</span></p><p><span style=\"font-size: 14px;\">　　slice(start, deleteCount, [item1[, item2[,...[,itemN]]]]) 返从一个数组中移除一个或多个元素,如果必要,在所移除元素的位置上插入新元素,返回所移除的元素</span></p><p><span style=\"font-size: 14px;\">　　sort(compare Function) 在未指定排序号的情况下,按照元素的字母顺序排列,如果不是字符串类型则转换成字符串再排序,返回排序后的数组</span></p><p><span style=\"font-size: 14px;\">　　splice()&nbsp; &nbsp; &nbsp;为数组删除并添加新的元素</span></p><p><span style=\"font-size: 14px;\">　　toSource()&nbsp; &nbsp; 显示对象的源代码</span></p><p><span style=\"font-size: 14px;\">　　toString()&nbsp; &nbsp; 将数组所有元素返回一个字符串,其间用逗号分隔</span></p><p><span style=\"font-size: 14px;\">　　unshift(value)为数组的开始部分加上一个或多个元素,并且返回该数组的新长度</span></p><p><span style=\"font-size: 14px;\">　　valueOf()&nbsp; &nbsp; 返回数组对象的原始值</span></p><p><span style=\"font-size: 14px;\">&nbsp;</span></p><p><span style=\"font-size: 14px;\">6.Object</span></p><p><span style=\"font-size: 14px;\">&nbsp; &nbsp;属性:</span></p><p><span style=\"font-size: 14px;\">　　constructor Specifies the function that creates an object&#39;s prototype.</span></p><p><span style=\"font-size: 14px;\">　　prototype&nbsp; &nbsp; Allows the addition of properties to all objects.</span></p><p><span style=\"font-size: 14px;\">&nbsp;</span></p><p><span style=\"font-size: 14px;\">7.Function</span></p><p><span style=\"font-size: 14px;\">&nbsp; &nbsp;属性:</span></p><p><span style=\"font-size: 14px;\">　　arguments&nbsp; &nbsp; An array corresponding to the arguments passed to a function.</span></p><p><span style=\"font-size: 14px;\">　　arity&nbsp; &nbsp; &nbsp; Indicates the number of arguments expected by the function.</span></p><p><span style=\"font-size: 14px;\">　　caller&nbsp; &nbsp; &nbsp; Specifies which function called the current function.</span></p><p><span style=\"font-size: 14px;\">　　prototype&nbsp; &nbsp; Allows the addition of properties to a Function object.</span></p><p><span style=\"font-size: 14px;\">&nbsp; &nbsp;方法:</span></p><p><span style=\"font-size: 14px;\">　　toString&nbsp; &nbsp; &nbsp;Returns a string representing the specified object.</span></p><p><span style=\"font-size: 14px;\">&nbsp;</span></p><p><span style=\"font-size: 14px;\">9.Date</span></p><p><span style=\"font-size: 14px;\">&nbsp; &nbsp;属性(1):</span></p><p><span style=\"font-size: 14px;\">　　constructor&nbsp; &nbsp; &nbsp; 所建立对象的函数参考</span></p><p><span style=\"font-size: 14px;\">　　prototype&nbsp; &nbsp; &nbsp; &nbsp;能够为对象加入的属性和方法</span></p><p><span style=\"font-size: 14px;\">&nbsp; &nbsp;方法(43):</span></p><p><span style=\"font-size: 14px;\">　　getDay()&nbsp; &nbsp; &nbsp; &nbsp; 返回一周中的第几天(0-6)</span></p><p><span style=\"font-size: 14px;\">　　getYear()&nbsp; &nbsp; &nbsp; &nbsp;返回年份.2000年以前为2位,2000(包含)以后为4位</span></p><p><span style=\"font-size: 14px;\">　　getFullYear()&nbsp; &nbsp; &nbsp;返回完整的4位年份数</span></p><p><span style=\"font-size: 14px;\">　　getMonth()&nbsp; &nbsp; &nbsp; 返回月份数(0-11)</span></p><p><span style=\"font-size: 14px;\">　　getDate()&nbsp; &nbsp; &nbsp; &nbsp;返回日(1-31)</span></p><p><span style=\"font-size: 14px;\">　　getHours()&nbsp; &nbsp; &nbsp; &nbsp;返回小时数(0-23)</span></p><p><span style=\"font-size: 14px;\">　　getMinutes()&nbsp; &nbsp; &nbsp; 返回分钟(0-59)</span></p><p><span style=\"font-size: 14px;\">　　getSeconds()&nbsp; &nbsp; &nbsp; 返回秒数(0-59)</span></p><p><span style=\"font-size: 14px;\">　　getMilliseconds() 返回毫秒(0-999)</span></p><p><span style=\"font-size: 14px;\">　　getUTCDay()&nbsp; &nbsp; &nbsp; 依据国际时间来得到现在是星期几(0-6)</span></p><p><span style=\"font-size: 14px;\">　　getUTCFullYear()&nbsp; &nbsp; 依据国际时间来得到完整的年份</span></p><p><span style=\"font-size: 14px;\">　　getUTCMonth()&nbsp; &nbsp; &nbsp;依据国际时间来得到月份(0-11)</span></p><p><span style=\"font-size: 14px;\">　　getUTCDate()&nbsp; &nbsp; &nbsp; 依据国际时间来得到日(1-31)</span></p><p><span style=\"font-size: 14px;\">　　getUTCHours()&nbsp; &nbsp; &nbsp;依据国际时间来得到小时(0-23)</span></p><p><span style=\"font-size: 14px;\">　　getUTCMinutes()&nbsp; &nbsp; 依据国际时间来返回分钟(0-59)</span></p><p><span style=\"font-size: 14px;\">　　getUTCSeconds()&nbsp; &nbsp; 依据国际时间来返回秒(0-59)</span></p><p><span style=\"font-size: 14px;\">　　getUTCMilliseconds()依据国际时间来返回毫秒(0-999)</span></p><p><span style=\"font-size: 14px;\">　　getTime()&nbsp; &nbsp; &nbsp; &nbsp;返回从1970年1月1号0:0:0到现在一共花去的毫秒数</span></p><p><span style=\"font-size: 14px;\">　　getTimezoneoffset() 返回时区偏差值,即格林威治平均时间(GMT)与运行脚本的计算机所处时区设置之间相差的分钟数)</span></p><p><span style=\"font-size: 14px;\">　　parse(dateString)&nbsp; &nbsp;返回在Date字符串中自从1970年1月1日00:00:00以来的毫秒数</span></p><p><span style=\"font-size: 14px;\">　　setYear(yearInt)&nbsp; &nbsp; 设置年份.2位数或4位数</span></p><p><span style=\"font-size: 14px;\">　　setFullYear(yearInt)设置年份.4位数</span></p><p><span style=\"font-size: 14px;\">　　setMonth(monthInt) 设置月份(0-11)</span></p><p><span style=\"font-size: 14px;\">　　setDate(dateInt)&nbsp; &nbsp; 设置日(1-31)</span></p><p><span style=\"font-size: 14px;\">　　setHours(hourInt) 设置小时数(0-23)</span></p><p><span style=\"font-size: 14px;\">　　setMinutes(minInt) 设置分钟数(0-59)</span></p><p><span style=\"font-size: 14px;\">　　setSeconds(secInt) 设置秒数(0-59)</span></p><p><span style=\"font-size: 14px;\">　　setMilliseconds(milliInt) 设置毫秒(0-999)</span></p><p><span style=\"font-size: 14px;\">　　setUTCFullYear(yearInt) 依据国际时间来设置年份</span></p><p><span style=\"font-size: 14px;\">　　setUTCMonth(monthInt) 依据国际时间来设置月(0-11)</span></p><p><span style=\"font-size: 14px;\">　　setUTCDate(dateInt)&nbsp; &nbsp; &nbsp;依据国际时间来设置日(1-31)</span></p><p><span style=\"font-size: 14px;\">　　setUTCHours(hourInt)&nbsp; &nbsp; 依据国际时间来设置小时</span></p><p><span style=\"font-size: 14px;\">　　setUTCMinutes(minInt) 依据国际时间来设置分钟</span></p><p><span style=\"font-size: 14px;\">　　setUTCSeconds(secInt)&nbsp; &nbsp; 依据国际时间来设置秒</span></p><p><span style=\"font-size: 14px;\">　　setUTCMilliseconds(milliInt)依据国际时间来设置毫秒</span></p><p><span style=\"font-size: 14px;\">　　setTime(timeInt)&nbsp; &nbsp; 设置从1970年1月1日开始的时间.毫秒数</span></p><p><span style=\"font-size: 14px;\">　　toGMTString()&nbsp; &nbsp; &nbsp;根据格林威治时间将Date对象的日期(一个数值)转变成一个GMT时间字符串,如:Weds,15 June l997 14:02:02 GMT</span></p><p><span style=\"font-size: 14px;\">　　toUTCString()&nbsp; &nbsp; &nbsp;根据通用时间将一个Date对象的日期转换为一个字符串</span></p><p><span style=\"font-size: 14px;\">　　toLocaleString()&nbsp; &nbsp; 把Date对象的日期(一个数值)转变成一个字符串,使用所在计算机上配置使用的特定日期格式</span></p><p><span style=\"font-size: 14px;\">　　toSource()&nbsp; &nbsp; &nbsp; &nbsp;显示对象的源代码</span></p><p><span style=\"font-size: 14px;\">　　toString()&nbsp; &nbsp; &nbsp; &nbsp;将日期对象转换为字符串</span></p><p><span style=\"font-size: 14px;\">　　UTC(yyyy, mm, dd, hh, mm, ss, msec)返回从格林威治标准时间到指定时间的差距,单位为毫秒</span></p><p><span style=\"font-size: 14px;\">　　valueOf()&nbsp; &nbsp; &nbsp; &nbsp;返回日期对象的原始值</span></p><p><span style=\"font-size: 14px;\">&nbsp;</span></p><p><span style=\"font-size: 14px;\">10.Math</span></p><p><span style=\"font-size: 14px;\">&nbsp; &nbsp;属性:</span></p><p><span style=\"font-size: 14px;\">　　constructor&nbsp; &nbsp; &nbsp; 所建立对象的函数参考</span></p><p><span style=\"font-size: 14px;\">　　prototype&nbsp; &nbsp; &nbsp; &nbsp;能够为对象加入的属性和方法</span></p><p><span style=\"font-size: 14px;\">　　E&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;欧拉常量,自然对数的底(约等于2.718)</span></p><p><span style=\"font-size: 14px;\">　　LN2&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 2的自然对数(约等于0.693)</span></p><p><span style=\"font-size: 14px;\">　　LN10&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 10的自然对数(约等于2.302)</span></p><p><span style=\"font-size: 14px;\">　　LOG2E&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;以2为底的e的对数.(约等于1.442)</span></p><p><span style=\"font-size: 14px;\">　　LOG10E&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;以10为底的e的对数(约等于0.434)</span></p><p><span style=\"font-size: 14px;\">　　PI&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;∏的值(约等于3.14159)</span></p><p><span style=\"font-size: 14px;\">　　SQRT1_2&nbsp; &nbsp; &nbsp; &nbsp; 1/2(0.5)的平方根(即l除以2的平方根,约等于o.707)</span></p><p><span style=\"font-size: 14px;\">　　SQRT2&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;2的平方根(约等于1.414)</span></p><p><span style=\"font-size: 14px;\">&nbsp; &nbsp; 方法:</span></p><p><span style=\"font-size: 14px;\">　　abs(x)&nbsp; &nbsp; &nbsp;返回数字的绝对值</span></p><p><span style=\"font-size: 14px;\">　　acos(x)&nbsp; &nbsp; 返回数字的反余弦值</span></p><p><span style=\"font-size: 14px;\">　　asin(x)&nbsp; &nbsp; 返回数字的反正弦值</span></p><p><span style=\"font-size: 14px;\">　　atan(x)&nbsp; &nbsp; 返回位于-PI/2 和 PI/2 的反正切值</span></p><p><span style=\"font-size: 14px;\">　　atan2(y,x) 返回（x,y）位于 -PI 到 PI 之间的角度</span></p><p><span style=\"font-size: 14px;\">　　ceil(x)&nbsp; &nbsp; 返回 x 四舍五入后的最大整数</span></p><p><span style=\"font-size: 14px;\">　　cos(x)&nbsp; &nbsp; &nbsp;返回一个数字的余弦值</span></p><p><span style=\"font-size: 14px;\">　　exp(x)&nbsp; &nbsp; &nbsp;返回 E^x 值</span></p><p><span style=\"font-size: 14px;\">　　floor(x)&nbsp; &nbsp; 返回 x 四舍五入后的最小整数</span></p><p><span style=\"font-size: 14px;\">　　log(x)&nbsp; &nbsp; &nbsp;返回底数为E的自然对数</span></p><p><span style=\"font-size: 14px;\">　　max(x,y)&nbsp; &nbsp; 返回 x 和 y 之间较大的数</span></p><p><span style=\"font-size: 14px;\">　　min(x,y)&nbsp; &nbsp; 返回 x 和 y 之间较小的数</span></p><p><span style=\"font-size: 14px;\">　　pow(x,y)&nbsp; &nbsp; 返回 y^x 的值</span></p><p><span style=\"font-size: 14px;\">　　random()&nbsp; &nbsp; 返回位于 0 到 1 之间的随机函数</span></p><p><span style=\"font-size: 14px;\">　　round(x)&nbsp; &nbsp; 四舍五入后取整</span></p><p><span style=\"font-size: 14px;\">　　sin(x)&nbsp; &nbsp; &nbsp;返回数字的正弦值</span></p><p><span style=\"font-size: 14px;\">　　sqrt(x)&nbsp; &nbsp; 返回数字的平方根</span></p><p><span style=\"font-size: 14px;\">　　tan(x)&nbsp; &nbsp; &nbsp;返回一个角度的正切值</span></p><p><span style=\"font-size: 14px;\">　　toSource() 显示对象的源代码</span></p><p><span style=\"font-size: 14px;\">　　valueOf() 返回数学对象的原始值</span></p><p><br/></p>', 'Object', '关于Js的内置对象');

-- ----------------------------
-- Table structure for newstype
-- ----------------------------
DROP TABLE IF EXISTS `newstype`;
CREATE TABLE `newstype` (
  `id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(255) NOT NULL,
  `keywords` varchar(255) NOT NULL,
  `description` varchar(255) NOT NULL,
  `sort` int(11) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=9 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of newstype
-- ----------------------------
INSERT INTO `newstype` VALUES ('1', '前端开发1', '前端开发有HTML，CSS，Javascript...', '前端开发就是好', '100');
INSERT INTO `newstype` VALUES ('2', '前端开发2', '前端开发有HTML，CSS，Javascript...', '前端开发就是好', '99');
INSERT INTO `newstype` VALUES ('6', '后端开发', '后端开发有java，C，C++...', '后端开发就是高', '98');
INSERT INTO `newstype` VALUES ('7', '照片墙', '照片，分享，心情', '照片墙里面分享的是一些生活的照片，经历，成长...', '95');
INSERT INTO `newstype` VALUES ('8', '学校内网穿透', '以太坊MorphToken事件', '在本站可以看到前端技术，后端程序，网站内容管理系统等文章；还有我的程序人生！！！', '94');

-- ----------------------------
-- Table structure for user
-- ----------------------------
DROP TABLE IF EXISTS `user`;
CREATE TABLE `user` (
  `id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `username` varchar(255) NOT NULL,
  `password` varchar(255) NOT NULL,
  `status` tinyint(4) NOT NULL,
  `time` int(11) NOT NULL,
  `avatar` varchar(255) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=136 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of user
-- ----------------------------
INSERT INTO `user` VALUES ('1', 'huang', '123123', '0', '123131312', '');
INSERT INTO `user` VALUES ('2', 'zhangsan', '111111', '1', '12213312', '');
INSERT INTO `user` VALUES ('3', 'lisi', '45454545', '0', '25514455', '');
INSERT INTO `user` VALUES ('4', 'shanghai', '12342423', '0', '15424556', '');
INSERT INTO `user` VALUES ('5', 'xiaoyum', '454646', '0', '12345454', '');
INSERT INTO `user` VALUES ('6', 'liuzai', '121423', '0', '454542124', '');
INSERT INTO `user` VALUES ('7', 'google', '22121223', '0', '142452444', '');
INSERT INTO `user` VALUES ('8', 'firefox', '1235456', '0', '12313453', '');
INSERT INTO `user` VALUES ('125', 'zhouxiaojie', '123456', '0', '12345323', '');
INSERT INTO `user` VALUES ('126', 'xiaotonxuw', '11111111', '0', '0', '');
INSERT INTO `user` VALUES ('127', 'lisiming', '4546465', '0', '124546456', '');
INSERT INTO `user` VALUES ('128', 'yuandi', '0000000', '0', '1212454', '');
INSERT INTO `user` VALUES ('129', 'huang2', 'huang222', '0', '12345432', '');
INSERT INTO `user` VALUES ('130', 'admin222', 'admin222', '0', '1231544315', '');
INSERT INTO `user` VALUES ('131', 'huang222', 'b4ed8dd5448cf3d93676fda3f361a2c5', '0', '123454646', '/upload/avatar/15668044557317846.jpg');
INSERT INTO `user` VALUES ('132', 'message', '11111111', '0', '1566801428', '/upload/avatar/15668044557317845.jpg');
INSERT INTO `user` VALUES ('134', 'message1', '11111111', '0', '1566804407', '/upload/avatar/15668044557317845.jpg');
INSERT INTO `user` VALUES ('135', 'message2', '11111111', '0', '1566804456', '/upload/avatar/15668044557317846.jpg');
